# Welcome to your prefect.yaml file! You can use this file for storing and managing
# configuration for deploying your flows. We recommend committing this file to source
# control along with your flow code.

# Generic metadata about this project
name: mm-referral-program
prefect-version: 3.2.1

# build section allows you to manage and build docker images
build:
- prefect_docker.deployments.steps.build_docker_image:
    id: build_image
    requires: prefect-docker>=0.3.1
    image_name: us-central1-docker.pkg.dev/lead-scoring-415022/prefect-flows/mm-referral-test
    tag: latest
    dockerfile: auto

# push section allows you to manage if and how this project is uploaded to remote locations
push:
- prefect_docker.deployments.steps.push_docker_image:
    requires: prefect-docker>=0.3.1
    image_name: '{{ build_image.image_name }}'
    tag: '{{ build_image.tag }}'

# pull section allows you to provide instructions for cloning this project in remote locations
pull:
- prefect.deployments.steps.git_clone:
    repository: https://github.com/Mindmint-LLC/referral_system.git
    branch: main
    access_token: '{{ prefect.blocks.secret.github-access-token }}'

# the deployments section allows you to provide configuration for deploying flows
deployments:
- name: mm-referral-program
  schedule:
    cron: '0 5 * * *'
  entrypoint: prefect_run.py:mm_referral_program
  work_pool:
    name: gcloud-work-pool
    work_queue_name: default
    job_variables:
      image: '{{ build_image.image }}'
      env:
        DBT_DATASET: "{{ $DBT_DATASET }}"
        DBT_DATASET_STRIPE_MINDMINT: "{{ $DBT_DATASET_STRIPE_MINDMINT }}"
        DBT_DATASET_STRIPE_MASTERMIND: "{{ $DBT_DATASET_STRIPE_MASTERMIND }}"
        DBT_PROJECT: "{{ $DBT_PROJECT }}"
        DBT_DATASET_KBBEVERGREEN: "{{ $DBT_DATASET_KBBEVERGREEN }}"
        MM_API_URL: "{{ $MM_API_URL }}"
        MM_API_UID: "{{ $MM_API_UID }}"
        MM_API_PWD: "{{ $MM_API_PWD }}"
        FUNNEL_ID: "{{ $FUNNEL_ID }}"